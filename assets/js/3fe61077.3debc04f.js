"use strict";(self.webpackChunkzig_school=self.webpackChunkzig_school||[]).push([[659],{6071:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});var n=r(5893),a=r(1151);const t={title:"Arrays",sidebar_position:4},o="Arrays",i={id:"basics/arrays",title:"Arrays",description:"The type [n]T is an array of n values of type T (i.e., the array's child type).",source:"@site/docs/basics/arrays.mdx",sourceDirName:"basics",slug:"/basics/arrays",permalink:"/zig-school/docs/basics/arrays",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/basics/arrays.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Arrays",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Conditional Statements (if, else)",permalink:"/zig-school/docs/basics/conditional_statments"},next:{title:"Loops (While, For)",permalink:"/zig-school/docs/for-while-loops"}},c={},l=[];function d(e){const s={code:"code",em:"em",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"arrays",children:"Arrays"}),"\n",(0,n.jsxs)(s.p,{children:["The type ",(0,n.jsx)(s.strong,{children:"[n]T"})," is an array of ",(0,n.jsx)(s.strong,{children:"n"})," values of type ",(0,n.jsx)(s.strong,{children:"T"})," (i.e., the array's child type)."]}),"\n",(0,n.jsx)(s.p,{children:"The expression"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-zig",children:"const a = [5]u8{ 'h', 'e', 'l', 'l', 'o' };\n"})}),"\n",(0,n.jsxs)(s.p,{children:["For array literals, ",(0,n.jsx)(s.em,{children:"N"})," may be replaced by ",(0,n.jsx)(s.code,{children:"_"})," to infer the size of the array."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-zig",children:"const b = [_]u8{ 'w', 'o', 'r', 'l', 'd' };\n"})}),"\n",(0,n.jsx)(s.p,{children:"To get the size of an array, simply access the array's len field."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-zig",children:"const b = [_]u8{ 'w', 'o', 'r', 'l', 'd' };\n"})}),"\n",(0,n.jsx)(s.p,{children:"To get the size of an array, simply access the array's len field."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-zig",children:"const array = [_]u8{ 'h', 'e', 'l', 'l', 'o' };\nconst length = array.len; // 5\n"})})]})}function h(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,s,r)=>{r.d(s,{Z:()=>i,a:()=>o});var n=r(7294);const a={},t=n.createContext(a);function o(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);